#
# ░█▀█░▀█▀░█▀▀░█▀█░█▄█░░░░█▀▀░█▀█░█▀█░█▀▀
# ░█▀▀░░█░░█░░░█░█░█░█░░░░█░░░█░█░█░█░█▀▀
# ░▀░░░▀▀▀░▀▀▀░▀▀▀░▀░▀░▀░░▀▀▀░▀▀▀░▀░▀░▀░░
#
#--------------------------------------
#    Shadows
#--------------------------------------
shadow = true;             # client shadows on windows
shadow-radius = 10;        # blur radius for shadows
shadow-opacity = 1.0;      # opacity for shadows (0.0-1.0)
shadow-offset-x = -5;      # the shadow X offset
shadow-offset-y = -5;      # the shadow Y offset 
shadow-red = 1.0;          # red color value of shadows (0.0-1.0)
shadow-green = 1.0;        # green color value of shadows (0.0-1.0)
shadow-blue = 1.0;         # blue color value of shadows (0.0-1.0)
shadow-color = "#000000"   # shadow color (override red/green/blue)
shadow-exclude = [         # windows that should have no shadow
  "name = 'Notification'",
  "class_g = 'awesome'",
  "class_g = 'conky'",
  "class_g = 'Gromit-mpx'",
  "class_g = 'pensela'",
  "class_g = 'Screenkey'",
  "name = 'oneko'",
  "class_g = 'Plank'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c"
];
clip-shadow-above = [];           # windows that should have no shadow painted over
# shadow-exclude-reg = "x10+0+0"  # geometry region that exclude the shadow
crop-shadow-to-monitor = false    # crop shadow on a particular monitor

#--------------------------------------
#    Fading
#--------------------------------------
fading = true;                    # fade windows in/out when opening/closing
fade-in-step = 0.15;              # opacity between steps while fading in
fade-out-step = 0.15;             # opacity between steps while fading out
fade-delta = 10;                  # time between steps in fade step
fade-exclude = [];                # windows that shuldn't be faded
no-fading-openclose = false;      # do not fade on window open/close
no-fading-destroyed-argb = false; # destroyed widonws with WM frame

#--------------------------------------
#    Opacity
#--------------------------------------
inactive-opacity = 1.0;            # opacity of inactive windows
frame-opacity = 0.7;               # title/frame opacity windows
inactive-opacity-override = false; # let set by '_NET_WM_WINDOW_OPACITY'
active-opacity = 1.0;              # default opacity for active windows
inactive-dim = 0.0;                # dim inactive windows
inactive-dim-fixed = 1.0;          # fixed inactive windows dim value
focus-exclude = [                  # exclude focus
 "class_g = 'Cairo-clock'"
];
opacity-rule = [];                 # rules to opacity

#--------------------------------------
#    Corners
#--------------------------------------
corner-radius = 0;           # radius of rounded window corners
rounded-corners-exclude = [  # exclude rounded corners
 "window_type = 'dock'",
 "window_type = 'desktop'"
];

#--------------------------------------
#    Blur
#--------------------------------------

blur-method= "none"            # see more on BLUR section
# blur-size= 7;                # blur size on box method
# blur-strength = 55;          # strength on blue_kawase method
# blur-deviation = 50;         # deviation on gaussian method
blur-background = true;        # blur on semi-transparent windows
blur-background-frame = false; # blur when windows is not opaque
blur-background-fixed = true;  # fixed blur strength
blur-kern = "3x3box";          # blur convolution kernel
blur-background-exclude = [    # exclude blur background
  "window_type = 'dock'",
  ## "class_g = 'conky'",
  # "class_g = 'Gromit-mpx'",
  "class_g = 'pensela'",
  "class_g = 'kitty'",
  "class_g = 'Gromit-mpx'",
  "class_g = 'oneko'",
  "_GTK_FRAME_EXTENTS@:c"
];

#--------------------------------------
#    General Settings
#--------------------------------------
dbus = false;      # enable control via d-bus
daemon = false;    # daemonize process
backend = "glx";   # specify backend
vsync = true;      # enable vsync

dithered-present = false;      # higher precision on rendering (opengl)
mark-wmwin-focused = true;     # try locate WM windows
mark-ovredir-focused = true;   # mark ovredir windows 
detect-rounded-corners = true; # try locate rounded corners
detect-client-opacity = true;  # detect '_NET_WM_WINDOW_OPACITY' windows
use-ewmh-active-win = false;   # 'NET_ACTIVE_WINDOW' to determine focused wm

unredir-if-possible = false         # unredirect all windows if a full-screen
unredir-if-possible-delay = 0       # delay before unredirecting the window
unredir-if-possible-exclude = []    # wms that shouldn't be considered full
detect-transient = true;            # use 'WM_TRANSIENT_FOR' to group windows
detect-client-leader = false;       # use 'WM_CLIENT_LEADER' to group windows
resize-damage = 1                   # resize damaged region by a qtd. of pixels
invert-color-include = []           # wms that should be painted with inverted color
glx-no-stencil = false;             # GLX: avoid using stencil buffer
glx-no-rebind-pixmap = false;       # GLX: avoid rebinding pixmap on window damage
use-damage = true;                  # disable the use of damage information.
xrender-sync-fence = false;         # use X Sync fence to sync clients' draw calls
window-shader-fg = "default"        # GLX: use specified GLSL fragment shader
window-shader-fg-rule = [           # use rules to set per-window shaders
  "my_shader.frag:window_type != 'dock'"
]
# force-win-blend = false
# no-ewmh-fullscreen = false   # don't use EWMH to detect fullscreen wms
max-brightness = 1.0      # dimming bright windows
transparent-clipping = false;   # make transparent windows clip others
transparent-clipping-exclude = []; # Windows that shouldn't be transparent

#--------------------------------------
#    Logs
#--------------------------------------
log-level = "warn";     # log lv("trace","debug","info","warn","error")
# log-file = "file"     # log file
show-all-xerrors = false   # for debug
# write-pid-path = "file"   # Write process ID
